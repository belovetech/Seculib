apiVersion: apps/v1
kind: Deployment
metadata:
  name: secure-auth-dos-prevention
spec:
  replicas: 1
  selector:
    matchLabels:
      app: secure-auth-dos-prevention
  template:
    metadata:
      labels:
        app: secure-auth-dos-prevention
    spec:
      containers:
      - name: secure-auth-dos-prevention
        image: beloved0211/secure-auth-dos-prevention:latest
        ports:
        - containerPort: 3000
        env:
        - name: FLASK_APP
          value: "api.app"
        - name: FLASK_ENV
          value: "development"
        - name: REDIS_HOST
          value: "redis"
        - name: REDIS_PORT
          value: "6379"
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.1"
            memory: "128Mi"
        volumeMounts:
        - name: sqlite-storage
          mountPath: ./app/
        - name: env-file
          mountPath: ./app/.env
          subPath: .env
      volumes:
      - name: sqlite-storage
        persistentVolumeClaim:
          claimName: sqlite-pvc
      - name: env-file
        configMap:
          name: secure-auth-config

---

apiVersion: v1
kind: Service
metadata:
  name: secure-auth-dos-prevention-service
spec:
  selector:
    app: secure-auth-dos-prevention
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: NodePort

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  serviceName: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:alpine
        ports:
        - containerPort: 6379
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 3
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.1"
            memory: "128Mi"
        volumeMounts:
        - name: redis-storage
          mountPath: /data # Default path for Redis data
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sqlite-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: secure-auth-config
data:
  .env: |
    FLASK_APP=api.app
    FLASK_ENV=development
    REDIS_HOST=redis
    REDIS_PORT=6379
